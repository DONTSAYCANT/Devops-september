=================
Git
=================


What is git ===> Centralized distributed version control storage (VCS)

perforce / svn ==> previous generation

gerrit / gitlab / github / bitbucket / git ===> 

Enterprise version / 

git ===> command line or GUI 


Devops engineers:  command line and GUI 

Developers / Testers: Basic commands and GUI 


Creating one repo:

GUI:   Create repo, Create


1) Create repo 
2) Archive repo 
3) Change the ownership
4) change the visibility

Command: git init


Commit in GUI:

	Add the file or upload the file 
	Commit messgae
	Commit 
	
Commit in command line:
	git add .  ===> workspace to staging area
	git commit -m "message what"   ===> stagin area to local repo 
	git push  ===> local repo to remote repo
	
	
	git clone ===> taking code from remote repo to local workspace 


Git stash: temperary storage of the code 

Git branch: Copy of the code 

Create a branch through github GUI 

branch naming: 

	Branch 
	
	devopsproj1_e5r46_hotfix

Main branch or master branch ===> Production code or production engine code 

Branching strategies in git:

i) Development or enhancement 
2) Hotfix branch 
3) bug fix branch 
4) QA branch deployment branch 

Git commit id or SHA id : Unique id for a change
							Git commit id
							git commit messgae 
							git commit 

Git tag:
          versioning or naming up to particular commits 




Git architecture:  
		
		Local workspace  (Un recognised code)
		Staging area     (Recognised code )
		Local repo   
		Remote repo    ===> Final stage 

Git clone vs Git fork

	git clone ===> remote repo  to local workspace 
	git fork ====> Taking complete from one workspace to another 


Git revert:

	GUI: git revert option button 
	Command line: git revert <commit id>


Git cherrypick:
	one particular commit from one branch to another branch 

Pull request:
	Syncing one branch to another branch (All commits)


Git flow 

Git actions or web hooks

Git push vs Git pull 


=============
commands:
=============

git clone <repo name>

git log 

git log -n2

git branch 

git remote -v


push ===> local repo to remote repo 
pull ===> remote repo to local repo to local workspace 
fetch ===> remote repo to local repo
merge ===> local repo to local workspace 

pull ===> fetch + merge 


 git status
 
 git add <file name>  or git add .    (untracked to tracked or staging level)
 
 
 
 Tracked stage (staging level) to untracked stage 
 
 git restore --staged git
 git reset <file name >
 
 git commit -m "commit messgae"    ===> staging level to local repo 

 git push    ===> local repo to remote repo 
 
 git config --global user.name "DONTSAYCANT"
 
 git config --global user.email "mynameisparthipan@gmail.com"
 
 git commit -am "this will do both add and commit"
 
 git init .

 




















