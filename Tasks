=================
24 sept 
===================

1. Github account creation
2. What is ? 
3. install git/jenkins
4. account creation in aws 
5. repo creation and task update


====================
October 1
====================

AWS GCP azure ec2 (5 mins)
Linux vs windows , pros and cons, open source, power shell, command prompt, linux termial, putty/Mobaxterm (5 mins)
Github account creation
AWS free tier account creation

=========================
October 2
==========================

Create a Ec2 machine (linux machine), Login to machine (putty) and execute any five linux commands
   https://www.tutsmake.com/how-to-connect-to-ec2-instance-from-putty-and-ssh-terminal/
   https://it-infrastructure.solutions/spinning-up-your-first-ec2-instance-aws/
   
 
===========================
October 8
===========================

AWS:

Create aws fre tier account
Launch an ec2 free instance
Install mobaxterm
Login to ec2 machine through ssh client(mobaxterm) ===> ssh client connection
Execute five linux command ===> cd ls chmod grep ps mkdir vim 10 commands
exit from the system
terminate the ec2 machine


Github:

create github account
create a repo
Upload aws task file in the repo


https://aws.plainenglish.io/devops-102-lifecycle-and-ci-cd-b18923240d49

===========================
October 15
===========================

Git, Git bash/GUI installation, GithubDesktop installation in local system (including git installation in linux ec2 machine)
Difference between git and svn/perfoce
Advantages and Disadvantages of git


============================
October 23
===========================

Understand git architecture https://intellipaat.com/blog/what-is-git/
All the practical tasks 


=========================
October 29
==========================
Git log commandline all commands in cheat sheets
Try all basic commands from https://github.com/DONTSAYCANT/Devops-september/blob/main/SWTM-2088_Atlassian-Git-Cheatsheet%20(1).pdf

Read below pages:

https://www.atlassian.com/git/tutorials/saving-changes/git-commit
https://docs.gitlab.com/ee/gitlab-basics/start-using-git.html
https://github.com/git-guides/git-commit
https://www.atlassian.com/git/tutorials/saving-changes/git-stash


=====================================
November 13
=======================================

Jenkins installation and read about jenkins


==================================
November 20
===================================

Jenkins installations:

https://www.jenkins.io/doc/book/installing/windows/
https://phoenixnap.com/kb/install-jenkins-on-windows
https://www.guru99.com/download-install-jenkins.html


https://www.simplilearn.com/tutorials/aws-tutorial/aws-s3

=====================================
November 26
=====================================
Try commands and create a document ===> Git
Aws s3, Aws RDS
Jenkins installations
aws ec2 instane creation, access and linux commands
Mobaxtern/putty to login to a ec2 machine
filezilla, winscp, scp
Linux commands
visual studio and eclipse ===> pull, clone, create branch and all other git activities
git lab, codecommit, github, bitbucket ===> Installation, execute all git commands
Git desktop ===> cherry pick and clone, push, pull, fetch
Pull request from one branch to another branch


Read about 
https://medium.com/@jubinjacob19/the-beginners-guide-code-coverage-4e3c60e11d85
https://www.guru99.com/code-coverage.html


=============================
December 3
==============================

Jenkins tasks
10-20 important plugins in jenkins


===================================
Feb 4
===================================

Install docker desktop
Install docker on ec2 machine https://docs.docker.com/desktop/install/ubuntu/
Install Virtual box 
Create hub.docker.com account
Read about https://www.tutorialspoint.com/docker/docker_public_repositories.htm  (virtualisation vs containers, docker image, docker file, container, image, architecture, some commands)


=======================
Feb 11
=======================

Understand https://dev.to/docker/docker-architecture-life-cycle-of-docker-containers-and-data-management-1a9c#:~:text=Docker%20Container%20Lifecycle%20Management&text=Running%20state,Killed%2FDeleted%20state
Watch all docker recordings
https://www.edureka.co/blog/docker-commands/
https://www.mygreatlearning.com/blog/top-essential-docker-commands/
https://towardsdatascience.com/12-essential-docker-commands-you-should-know-c2d5a7751bb5
https://docs.docker.com/engine/reference/commandline/docker/


execute 30 + docker commands https://dockerlabs.collabnix.com/docker/cheatsheet/
Try to docerize one java application, one python application, one nginx/nodejs application
   1. Create docker file for your application (download application from google)
   2. Build the image with tage
   3. Upload the image inside docker hub
   4. Share the image in group



Kubernetes tasks:

1. 150 commands 

Try to ececute it both ways (through imperative and declarative)

2. Pod creation 
3. replica set and deployment ==> difference, create, update image, delete deployment
4. etcd backup and restore
5. static pod creation
6. mutli container pod
7. kubectl version upgrade 
8. secrets 
9. config maps
10. pv and pvc 
11. namespace



Service clusterip, Nodeport and load balancers























   
   

